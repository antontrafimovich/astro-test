---
import Suspense from "../shared/lib/utils/Suspense.astro";

import { pause } from "../../lib/utils/time";
import db, { Database } from "../../app/db";

function getPayments(db: Database, invoiceId: string): Promise<any[]> {
  return new Promise((resolve, reject) => {
    return db.all(
      "SELECT date, name AS payment FROM payments INNER JOIN payment_methods ON payments.payment_method = payment_methods.payment_method_id WHERE invoice_id = ?",
      invoiceId,
      (err, rows) => {
        if (err) {
          console.log(err);
          reject(err);
          return;
        }

        console.log(rows);
        resolve(rows as any[]);
      }
    );
  });
}
---

<Suspense>
  <div slot="fallback">Loading...</div>

  <Fragment slot="component">
    {
      pause(3000)
        .then(() => getPayments(db, Astro.params.invoice as string))
        .then((result) => {
          return (
            <ul id="paymentsList">
              {result.map((invoice) => (
                <li>
                  {invoice.date}, {invoice.payment}
                </li>
              ))}
            </ul>
          );
        })
    }
  </Fragment>
</Suspense>
